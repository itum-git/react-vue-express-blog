import{an as a,ci as e,u as t,ai as s,c4 as l,h as n,ce as r,r as c,x as d,z as o,o as i,c as p,i as u,k as m,w as x,t as f,A as y,av as g,at as v,d as w,cj as h,ck as k,c9 as _}from"./index.6765fe01.js";import{E as $,a as j}from"./el-col.b01314c8.js";import{a as b,_ as E,E as O}from"./CountTo.902caa82.js";import{E as C}from"./el-divider.24c2f37d.js";import{E as z}from"./el-link.98e24cbb.js";import{r as A,_ as M}from"./echarts-data.97fc79df.js";import"./debounce.7b2dd62a.js";const N={"zh-CN":{justNow:"刚刚",past:a=>a.match(/\d/)?`${a}前`:a,future:a=>a.match(/\d/)?`${a}后`:a,month:(a,e)=>1===a?e?"上个月":"下个月":`${a} 个月`,year:(a,e)=>1===a?e?"去年":"明年":`${a} 年`,day:(a,e)=>1===a?e?"昨天":"明天":`${a} 天`,week:(a,e)=>1===a?e?"上周":"下周":`${a} 周`,hour:a=>`${a} 小时`,minute:a=>`${a} 分钟`,second:a=>`${a} 秒`},en:{justNow:"刚刚",past:a=>a.match(/\d/)?`${a} ago`:a,future:a=>a.match(/\d/)?`in ${a}`:a,month:(a,e)=>1===a?e?"last month":"next month":`${a} month${a>1?"s":""}`,year:(a,e)=>1===a?e?"last year":"next year":`${a} year${a>1?"s":""}`,day:(a,e)=>1===a?e?"yesterday":"tomorrow":`${a} day${a>1?"s":""}`,week:(a,e)=>1===a?e?"last week":"next week":`${a} week${a>1?"s":""}`,hour:a=>`${a} hour${a>1?"s":""}`,minute:a=>`${a} minute${a>1?"s":""}`,second:a=>`${a} second${a>1?"s":""}`}},D=s=>{const l=useLocaleStoreWithOut(),n=a((()=>l.getCurrentLocale));return e(s,{messages:N[t(n).lang]})},I=s({name:"Highlight",props:{tag:l.string.def("span"),keys:{type:Array,default:()=>[]},color:l.string.def("var(--el-color-primary)")},emits:["click"],setup(e,{emit:s,slots:l}){const r=a((()=>e.keys.map((a=>n("span",{onClick:()=>{s("click",a)},style:{color:e.color,cursor:"pointer"}},a))))),c=()=>{if(!(null==l?void 0:l.default))return null;const a=null==l?void 0:l.default()[0].children;if(!a)return null==l?void 0:l.default()[0];const s=(c=a,e.keys.forEach(((a,e)=>{const t=new RegExp(a,"g");c=c.replace(t,`{{${e}}}`)})),c.split(/{{|}}/));var c;const d=/^[0-9]*$/,o=s.map((a=>d.test(a)&&t(r)[a]||a));return n(e.tag,o)};return()=>c()}}),L={class:"flex items-center"},W=u("img",{src:k,alt:"",class:"w-70px h-70px rounded-[50%] mr-20px"},null,-1),H={class:"text-20px text-700"},P={class:"mt-10px text-14px text-gray-500"},R={class:"flex h-70px items-center justify-end <sm:mt-20px"},S={class:"px-8px text-right"},T={class:"text-14px text-gray-400 mb-20px"},q={class:"px-8px text-right"},B={class:"text-14px text-gray-400 mb-20px"},F={class:"px-8px text-right"},G={class:"text-14px text-gray-400 mb-20px"},J={class:"flex justify-between"},K={class:"flex items-center"},Q={class:"text-16px"},U={class:"mt-15px text-14px text-gray-400"},V={class:"mt-20px text-12px text-gray-400 flex justify-between"},X={class:"flex justify-between"},Y={class:"flex items-center"},Z=u("img",{src:k,alt:"",class:"w-35px h-35px rounded-[50%] mr-20px"},null,-1),aa={class:"text-14px"},ea={class:"mt-15px text-12px text-gray-400"},ta={class:"flex items-center"},sa={__name:"Workplace",setup(a){const e=c(!0);let s=d({project:0,access:0,todo:0});const l=async()=>{const a=await r.get({url:"/workplace/total"}).catch((()=>{}));a&&(s=Object.assign(s,a.data))};let n=d([]);const k=async()=>{const a=await r.get({url:"/workplace/project"}).catch((()=>{}));a&&(n=Object.assign(n,a.data))};let N=d([]);const sa=async()=>{const a=await r.get({url:"/workplace/dynamic"}).catch((()=>{}));a&&(N=Object.assign(N,a.data))};let la=d([]);const na=async()=>{const a=await r.get({url:"/workplace/team"}).catch((()=>{}));a&&(la=Object.assign(la,a.data))};let ra=d(A);const ca=async()=>{const a=await r.get({url:"/workplace/radar"}).catch((()=>{}));a&&(_(ra,"radar.indicator",a.data.map((a=>({name:da(a.name),max:a.max})))),_(ra,"series",[{name:`xxx${da("workplace.index")}`,type:"radar",data:[{value:a.data.map((a=>a.personal)),name:da("workplace.personal")},{value:a.data.map((a=>a.team)),name:da("workplace.team")}]}]))};(async()=>{await Promise.all([l(),k(),sa(),na(),ca()]),e.value=!1})();const{t:da}=useI18n();return(a,l)=>{const r=o("Icon");return i(),p(g,null,[u("div",null,[m(t(O),{shadow:"never"},{default:x((()=>[m(t(b),{loading:e.value,animated:""},{default:x((()=>[m(t($),{gutter:20,justify:"space-between"},{default:x((()=>[m(t(j),{xl:12,lg:12,md:12,sm:24,xs:24},{default:x((()=>[u("div",L,[W,u("div",null,[u("div",H,f(t(da)("workplace.goodMorning"))+"，Archer，"+f(t(da)("workplace.happyDay")),1),u("div",P,f(t(da)("workplace.toady"))+"，20℃ - 32℃！ ",1)])])])),_:1}),m(t(j),{xl:12,lg:12,md:12,sm:24,xs:24},{default:x((()=>[u("div",R,[u("div",S,[u("div",T,f(t(da)("workplace.project")),1),m(t(E),{class:"text-20px","start-val":0,"end-val":t(s).project,duration:2600},null,8,["end-val"])]),m(t(C),{direction:"vertical"}),u("div",q,[u("div",B,f(t(da)("workplace.toDo")),1),m(t(E),{class:"text-20px","start-val":0,"end-val":t(s).todo,duration:2600},null,8,["end-val"])]),m(t(C),{direction:"vertical","border-style":"dashed"}),u("div",F,[u("div",G,f(t(da)("workplace.access")),1),m(t(E),{class:"text-20px","start-val":0,"end-val":t(s).access,duration:2600},null,8,["end-val"])])])])),_:1})])),_:1})])),_:1},8,["loading"])])),_:1})]),m(t($),{class:"mt-20px",gutter:20,justify:"space-between"},{default:x((()=>[m(t(j),{xl:16,lg:16,md:24,sm:24,xs:24,class:"mb-20px"},{default:x((()=>[m(t(O),{shadow:"never"},{header:x((()=>[u("div",J,[u("span",null,f(t(da)("workplace.project")),1),m(t(z),{type:"primary",underline:!1},{default:x((()=>[y(f(t(da)("workplace.more")),1)])),_:1})])])),default:x((()=>[m(t(b),{loading:e.value,animated:""},{default:x((()=>[m(t($),null,{default:x((()=>[(i(!0),p(g,null,v(t(n),((a,e)=>(i(),w(t(j),{key:`card-${e}`,xl:8,lg:8,md:12,sm:24,xs:24},{default:x((()=>[m(t(O),{shadow:"hover"},{default:x((()=>[u("div",K,[m(r,{icon:a.icon,size:25,class:"mr-10px"},null,8,["icon"]),u("span",Q,f(a.name),1)]),u("div",U,f(t(da)(a.message)),1),u("div",V,[u("span",null,f(a.personal),1),u("span",null,f(t(h)(a.time,"yyyy-MM-dd")),1)])])),_:2},1024)])),_:2},1024)))),128))])),_:1})])),_:1},8,["loading"])])),_:1}),m(t(O),{shadow:"never",class:"mt-20px"},{header:x((()=>[u("div",X,[u("span",null,f(t(da)("workplace.dynamic")),1),m(t(z),{type:"primary",underline:!1},{default:x((()=>[y(f(t(da)("workplace.more")),1)])),_:1})])])),default:x((()=>[m(t(b),{loading:e.value,animated:""},{default:x((()=>[(i(!0),p(g,null,v(t(N),((a,e)=>(i(),p("div",{key:`dynamics-${e}`},[u("div",Y,[Z,u("div",null,[u("div",aa,[m(t(I),{keys:a.keys.map((a=>t(da)(a)))},{default:x((()=>[y(f(t(da)("workplace.pushCode")),1)])),_:2},1032,["keys"])]),u("div",ea,f(t(D)(a.time)),1)])]),m(t(C))])))),128))])),_:1},8,["loading"])])),_:1})])),_:1}),m(t(j),{xl:8,lg:8,md:24,sm:24,xs:24,class:"mb-20px"},{default:x((()=>[m(t(O),{shadow:"never"},{header:x((()=>[u("span",null,f(t(da)("workplace.shortcutOperation")),1)])),default:x((()=>[m(t(b),{loading:e.value,animated:""},{default:x((()=>[(i(),p(g,null,v(9,(a=>m(t(j),{key:`card-${a}`,xl:12,lg:12,md:12,sm:24,xs:24,class:"mb-10px"},{default:x((()=>[m(t(z),{type:"default",underline:!1},{default:x((()=>[y(f(t(da)("workplace.operation"))+f(a),1)])),_:2},1024)])),_:2},1024))),64))])),_:1},8,["loading"])])),_:1}),m(t(O),{shadow:"never",class:"mt-20px"},{header:x((()=>[u("span",null,"xx"+f(t(da)("workplace.index")),1)])),default:x((()=>[m(t(b),{loading:e.value,animated:""},{default:x((()=>[m(t(M),{options:t(ra),height:400},null,8,["options"])])),_:1},8,["loading"])])),_:1}),m(t(O),{shadow:"never",class:"mt-20px"},{header:x((()=>[u("span",null,f(t(da)("workplace.team")),1)])),default:x((()=>[m(t(b),{loading:e.value,animated:""},{default:x((()=>[m(t($),null,{default:x((()=>[(i(!0),p(g,null,v(t(la),(a=>(i(),w(t(j),{key:`team-${a.name}`,span:12,class:"mb-20px"},{default:x((()=>[u("div",ta,[m(r,{icon:a.icon,class:"mr-10px"},null,8,["icon"]),m(t(z),{type:"default",underline:!1},{default:x((()=>[y(f(a.name),1)])),_:2},1024)])])),_:2},1024)))),128))])),_:1})])),_:1},8,["loading"])])),_:1})])),_:1})])),_:1})],64)}}};export{sa as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
