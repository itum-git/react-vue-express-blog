import{ce as e,f as t,r as s,x as a,z as l,o as i,d as n,w as o,k as d,u as c,i as x,n as r,t as u,e as _}from"./index.6765fe01.js";import{a as f,E as m}from"./el-col.b01314c8.js";import{E as p,a as g,_ as v}from"./CountTo.902caa82.js";const y=()=>e.get({url:"/analysis/userAccessSource"}),b=()=>e.get({url:"/analysis/weeklyUserActivity"}),h=()=>e.get({url:"/analysis/monthlySales"}),w={class:"flex flex-col justify-between"},$={class:"flex flex-col justify-between"},j={class:"flex flex-col justify-between"},k={class:"flex flex-col justify-between"},z=t({__name:"PanelGroup",setup(t){const{getPrefixCls:y}=_(),b=y("panel"),h=s(!0);let z=a({users:0,messages:0,moneys:0,shoppings:0});return(async()=>{const t=await e.get({url:"/analysis/total"}).catch((()=>{})).finally((()=>{h.value=!1}));z=Object.assign(z,(null==t?void 0:t.data)||{})})(),(e,t)=>{const s=l("Icon");return i(),n(c(m),{gutter:20,justify:"space-between",class:r(c(b))},{default:o((()=>[d(c(f),{xl:6,lg:6,md:12,sm:12,xs:24},{default:o((()=>[d(c(p),{shadow:"hover",class:"mb-20px"},{default:o((()=>[d(c(g),{loading:h.value,animated:"",rows:2},{default:o((()=>[x("div",{class:r(`${c(b)}__item flex justify-between`)},[x("div",null,[x("div",{class:r(`${c(b)}__item--icon ${c(b)}__item--peoples p-16px inline-block rounded-6px`)},[d(s,{icon:"svg-icon:peoples",size:40})],2)]),x("div",w,[x("div",{class:r(`${c(b)}__item--text text-16px text-gray-500 text-right`)},u("analysis.newUser"),3),d(c(v),{class:"text-20px font-700 text-right","start-val":0,"end-val":102400,duration:2600})])],2)])),_:1},8,["loading"])])),_:1})])),_:1}),d(c(f),{xl:6,lg:6,md:12,sm:12,xs:24},{default:o((()=>[d(c(p),{shadow:"hover",class:"mb-20px"},{default:o((()=>[d(c(g),{loading:h.value,animated:"",rows:2},{default:o((()=>[x("div",{class:r(`${c(b)}__item flex justify-between`)},[x("div",null,[x("div",{class:r(`${c(b)}__item--icon ${c(b)}__item--message p-16px inline-block rounded-6px`)},[d(s,{icon:"svg-icon:message",size:40})],2)]),x("div",$,[x("div",{class:r(`${c(b)}__item--text text-16px text-gray-500 text-right`)},u("analysis.unreadInformation"),3),d(c(v),{class:"text-20px font-700 text-right","start-val":0,"end-val":81212,duration:2600})])],2)])),_:1},8,["loading"])])),_:1})])),_:1}),d(c(f),{xl:6,lg:6,md:12,sm:12,xs:24},{default:o((()=>[d(c(p),{shadow:"hover",class:"mb-20px"},{default:o((()=>[d(c(g),{loading:h.value,animated:"",rows:2},{default:o((()=>[x("div",{class:r(`${c(b)}__item flex justify-between`)},[x("div",null,[x("div",{class:r(`${c(b)}__item--icon ${c(b)}__item--money p-16px inline-block rounded-6px`)},[d(s,{icon:"svg-icon:money",size:40})],2)]),x("div",j,[x("div",{class:r(`${c(b)}__item--text text-16px text-gray-500 text-right`)},u("analysis.transactionAmount"),3),d(c(v),{class:"text-20px font-700 text-right","start-val":0,"end-val":9280,duration:2600})])],2)])),_:1},8,["loading"])])),_:1})])),_:1}),d(c(f),{xl:6,lg:6,md:12,sm:12,xs:24},{default:o((()=>[d(c(p),{shadow:"hover",class:"mb-20px"},{default:o((()=>[d(c(g),{loading:h.value,animated:"",rows:2},{default:o((()=>[x("div",{class:r(`${c(b)}__item flex justify-between`)},[x("div",null,[x("div",{class:r(`${c(b)}__item--icon ${c(b)}__item--shopping p-16px inline-block rounded-6px`)},[d(s,{icon:"svg-icon:shopping",size:40})],2)]),x("div",k,[x("div",{class:r(`${c(b)}__item--text text-16px text-gray-500 text-right`)},u("analysis.totalShopping"),3),d(c(v),{class:"text-20px font-700 text-right","start-val":0,"end-val":13600,duration:2600})])],2)])),_:1},8,["loading"])])),_:1})])),_:1})])),_:1},8,["class"])}}},[["__scopeId","data-v-ea11bbd2"]]),S=Object.freeze(Object.defineProperty({__proto__:null,default:z},Symbol.toStringTag,{value:"Module"}));export{z as P,b as a,h as b,S as c,y as g};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
